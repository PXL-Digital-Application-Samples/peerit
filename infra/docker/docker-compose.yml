version: '3.8'

services:
  # Databases
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: peerit
      POSTGRES_USER: peerit
      POSTGRES_PASSWORD: peerit_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    networks:
      - peerit-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - peerit-network

  # Frontend
  frontend:
    build:
      context: ../apps/frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - bff
    networks:
      - peerit-network

  # API Gateway
  api-gateway:
    build:
      context: ../apps/api-gateway
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      FRONTEND_URL: http://frontend:80
      BFF_URL: http://bff:3001
      AUTH_SERVICE_URL: http://auth-service:3020
      USER_SERVICE_URL: http://user-service:3021
      TEAM_SERVICE_URL: http://team-service:3022
      RUBRIC_SERVICE_URL: http://rubric-service:3023
      REVIEW_SERVICE_URL: http://review-service:3024
      REPORT_SERVICE_URL: http://report-service:3025
      EMAIL_SERVICE_URL: http://email-service:3026
      ORCHESTRATOR_URL: http://orchestrator:3010
    depends_on:
      - frontend
      - bff
      - orchestrator
    networks:
      - peerit-network

  # BFF
  bff:
    build:
      context: ../apps/bff
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      NODE_ENV: development
      ORCHESTRATOR_URL: http://orchestrator:3010
      AUTH_SERVICE_URL: http://auth-service:3020
      USER_SERVICE_URL: http://user-service:3021
      TEAM_SERVICE_URL: http://team-service:3022
      RUBRIC_SERVICE_URL: http://rubric-service:3023
      REVIEW_SERVICE_URL: http://review-service:3024
      REPORT_SERVICE_URL: http://report-service:3025
      EMAIL_SERVICE_URL: http://email-service:3026
      REDIS_URL: redis://redis:6379
    depends_on:
      - redis
      - orchestrator
    networks:
      - peerit-network

  # Orchestrator
  orchestrator:
    build:
      context: ../services/orchestrator
      dockerfile: Dockerfile
    ports:
      - "3010:3010"
    environment:
      PORT: 3010
      NODE_ENV: development
      AUTH_SERVICE_URL: http://auth-service:3020
      USER_SERVICE_URL: http://user-service:3021
      TEAM_SERVICE_URL: http://team-service:3022
      RUBRIC_SERVICE_URL: http://rubric-service:3023
      REVIEW_SERVICE_URL: http://review-service:3024
      REPORT_SERVICE_URL: http://report-service:3025
      EMAIL_SERVICE_URL: http://email-service:3026
      REDIS_URL: redis://redis:6379
    depends_on:
      - redis
      - auth-service
      - user-service
      - team-service
      - rubric-service
      - review-service
      - report-service
      - email-service
    networks:
      - peerit-network

  # Microservices
  auth-service:
    build:
      context: ../services/auth-service
      dockerfile: Dockerfile
    ports:
      - "3020:3020"
    environment:
      PORT: 3020
      NODE_ENV: development
      DATABASE_URL: postgresql://peerit:peerit_password@postgres:5432/peerit_auth
      JWT_SECRET: dev-jwt-secret-change-in-production
      BCRYPT_ROUNDS: 12
    depends_on:
      - postgres
    networks:
      - peerit-network

  user-service:
    build:
      context: ../services/user-service
      dockerfile: Dockerfile
    ports:
      - "3021:3021"
    environment:
      PORT: 3021
      NODE_ENV: development
      DATABASE_URL: postgresql://peerit:peerit_password@postgres:5432/peerit_users
    depends_on:
      - postgres
    networks:
      - peerit-network

  team-service:
    build:
      context: ../services/team-service
      dockerfile: Dockerfile
    ports:
      - "3022:3022"
    environment:
      PORT: 3022
      NODE_ENV: development
      DATABASE_URL: postgresql://peerit:peerit_password@postgres:5432/peerit_teams
    depends_on:
      - postgres
    networks:
      - peerit-network

  rubric-service:
    build:
      context: ../services/rubric-service
      dockerfile: Dockerfile
    ports:
      - "3023:3023"
    environment:
      PORT: 3023
      NODE_ENV: development
      DATABASE_URL: postgresql://peerit:peerit_password@postgres:5432/peerit_rubrics
    depends_on:
      - postgres
    networks:
      - peerit-network

  review-service:
    build:
      context: ../services/review-service
      dockerfile: Dockerfile
    ports:
      - "3024:3024"
    environment:
      PORT: 3024
      NODE_ENV: development
      DATABASE_URL: postgresql://peerit:peerit_password@postgres:5432/peerit_reviews
    depends_on:
      - postgres
    networks:
      - peerit-network

  report-service:
    build:
      context: ../services/report-service
      dockerfile: Dockerfile
    ports:
      - "3025:3025"
    environment:
      PORT: 3025
      NODE_ENV: development
      DATABASE_URL: postgresql://peerit:peerit_password@postgres:5432/peerit_reports
    depends_on:
      - postgres
    networks:
      - peerit-network

  email-service:
    build:
      context: ../services/email-service
      dockerfile: Dockerfile
    ports:
      - "3026:3026"
    environment:
      PORT: 3026
      NODE_ENV: development
      DATABASE_URL: postgresql://peerit:peerit_password@postgres:5432/peerit_emails
      SMTP_HOST: smtp.gmail.com
      SMTP_PORT: 587
      SMTP_USER: your-email@gmail.com
      SMTP_PASS: your-app-password
    depends_on:
      - postgres
    networks:
      - peerit-network

networks:
  peerit-network:
    driver: bridge

volumes:
  postgres_data:
