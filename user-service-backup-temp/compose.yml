# User Service Docker Compose
# Run with: docker compose up
# Or from root: docker compose up user-service

version: '3.8'

services:
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: peerit-user-service
    environment:
      # Service Configuration
      - PORT=3020
      - NODE_ENV=development
      - SERVICE_VERSION=1.0.0
      
      # Database Configuration (isolated database)
      - DATABASE_URL=postgresql://peerit_user:peerit_password@postgres:5432/peerit_user
      
      # Keycloak Configuration
      - KEYCLOAK_URL=http://keycloak:8080
      - KEYCLOAK_REALM=peerit
      - KEYCLOAK_CLIENT_ID=user-service
      - KEYCLOAK_CLIENT_SECRET=user-service-secret
      
      # Keycloak Admin Configuration
      - KEYCLOAK_ADMIN_CLIENT_ID=admin-cli
      - KEYCLOAK_ADMIN_CLIENT_SECRET=
      
      # Redis Configuration (optional)
      - REDIS_URL=redis://redis:6379/1
      
      # Security Configuration
      - CORS_ORIGIN=http://localhost:3000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX_REQUESTS=100
    ports:
      - "3021:3020"
    networks:
      - peerit-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3020/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

# Import shared infrastructure
networks:
  peerit-network:
    external: true
